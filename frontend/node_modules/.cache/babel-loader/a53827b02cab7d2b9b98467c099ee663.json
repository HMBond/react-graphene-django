{"ast":null,"code":"var _jsxFileName = \"/Users/mikebond/Repos/python-graphene-tutorial/mysite/frontend/src/routes/Question.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from 'urql';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChoicesForQuestionQuery = id => `\n  query {\n    choicesByQuestionId(id: ${id}) {\n        id\n        choiceText\n        votes\n    }\n  }\n`;\n\n_c = ChoicesForQuestionQuery;\n\nconst Question = ({\n  props\n}) => {\n  _s();\n\n  // eslint-disable-next-line\n  const [result, reexecuteQuery] = useQuery({\n    query: ChoicesForQuestionQuery(useParams().questionId)\n  });\n  const {\n    data,\n    fetching,\n    error\n  } = result;\n  if (fetching) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Oh no... \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/questions\",\n      children: \"\\u2B05\\uFE0F Back to question list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Question, \"UaGxpaTeFzAZZLgqJEwwpSfZRK4=\", false, function () {\n  return [useQuery, useParams];\n});\n\n_c2 = Question;\nexport default Question;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChoicesForQuestionQuery\");\n$RefreshReg$(_c2, \"Question\");","map":{"version":3,"sources":["/Users/mikebond/Repos/python-graphene-tutorial/mysite/frontend/src/routes/Question.js"],"names":["useQuery","Link","useParams","ChoicesForQuestionQuery","id","Question","props","result","reexecuteQuery","query","questionId","data","fetching","error","message","JSON","stringify"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,MAAMC,uBAAuB,GAAIC,EAAD,IAAS;AACzC;AACA,8BAA8BA,EAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CARA;;KAAMD,uB;;AAUN,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC9B;AACA,QAAM,CAACC,MAAD,EAASC,cAAT,IAA2BR,QAAQ,CAAC;AACxCS,IAAAA,KAAK,EAAEN,uBAAuB,CAACD,SAAS,GAAGQ,UAAb;AADU,GAAD,CAAzC;AAIA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAA4BN,MAAlC;AAEA,MAAIK,QAAJ,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,MAAIC,KAAJ,EAAW,oBAAO;AAAA,4BAAaA,KAAK,CAACC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE;AAAA,4BACE;AAAA,gBAAMC,IAAI,CAACC,SAAL,CAAeL,IAAf,EAAqB,IAArB,EAA2B,CAA3B;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAjBD;;GAAMN,Q;UAE6BL,Q,EACAE,S;;;MAH7BG,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import { useQuery } from 'urql';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\nconst ChoicesForQuestionQuery = (id) => `\n  query {\n    choicesByQuestionId(id: ${id}) {\n        id\n        choiceText\n        votes\n    }\n  }\n`;\n\nconst Question = ({ props }) => {\n  // eslint-disable-next-line\n  const [result, reexecuteQuery] = useQuery({\n    query: ChoicesForQuestionQuery(useParams().questionId),\n  });\n\n  const { data, fetching, error } = result;\n\n  if (fetching) return <p>Loading...</p>;\n  if (error) return <p>Oh no... {error.message}</p>;\n\n  return (\n    <>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n      <Link to=\"/questions\">⬅️ Back to question list</Link>\n    </>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}